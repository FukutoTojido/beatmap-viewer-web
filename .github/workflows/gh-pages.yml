# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['archive/v1']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v4
      # - name: Set up Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      #     cache: 'yarn'
      # - name: Install dependencies
      #   run: yarn
      # - name: Build
      #   run: yarn build
      # - name: Setup Pages
      #   uses: actions/configure-pages@v3
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     # Upload dist repository
      #     path: './dist'
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
      - name: Deploy to proxy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ~/beatmap-viewer-web
            git pull origin master
            git status
            npm install --only=prod
            npm run build
            cp ./dist/index.html ../file-proxy/views
            cp -r ./dist/* ../file-proxy/public
            rm ../file-proxy/public/index.html
            pm2 restart file-proxy
